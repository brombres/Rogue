library RogueC

# Generated by Froley. Will not be overwritten.
class CompileError( message:String, filepath=null:String, source=null:String, line=0:Int, column=0:Int ) : Error
  METHODS
    method init( filepath, message )

    method init( message )

    method describe
      Console.error.println this->String

    method to->String
      local w = Console.width.or_smaller(80)
      if (w <= 0) w = 80
      local builder = String()
      builder.println( "=" * w )
      builder.print( "ERROR" )
      if (filepath)
        if (filepath.contains('/'))
          builder.print( '' in "$/$"'' (File(filepath).parent.filename,File(filepath).filename) )
        else
          builder.print( '' in "$"'' (filepath) )
        endIf
        if (line)
          builder.print( " line $, column $" (line,column) )
        endIf
      endIf
      builder.[ println, println ]
      builder.println( message.word_wrapped(w) )
      builder.println

      if (line and column and source)
        builder.println
        local skip = which{ column<=(w-10):0 || column-(w-10) }
        forEach (line at index in LineReader(source))
          if (index+1 == this.line)
            if (skip) line = line.from( skip )
            builder.println( line.leftmost(w) )
            escapeForEach
          endIf
        endForEach
        builder.[ print(" " * (column-(skip+1))), println('^') ]
      endIf

      builder.println( "=" * w )
      return builder
endClass
