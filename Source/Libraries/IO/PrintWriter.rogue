class PrintWriter [abstract aspect]
  GLOBAL METHODS
    method create( writer:Writer<<Byte>> )->PrintWriter
      return BufferedPrintWriter( writer )

  METHODS
    method close
      flush

    method flush                                         [abstract]

    method indent->Int                                   [abstract]
    method print( value:Byte )                           [abstract]
    method print( value:Character )                      [abstract]
    method print( value:Int )                            [abstract]
    method print( value:Int32 )                          [abstract]
    method print( value:Int64 )                          [abstract]
    method print( value:Logical )                        [abstract]
    method print( value:Object )                         [abstract]
    method print( value:Real64 )                         [abstract]
    method print( value:Real64, decimal_places:Int32 )   [abstract]
    method print( value:String )                         [abstract]
    method println                                       [abstract]
    method println( value:Byte )                         [abstract]
    method println( value:Character )                    [abstract]
    method println( value:Int )                          [abstract]
    method println( value:Int32 )                        [abstract]
    method println( value:Int64 )                        [abstract]
    method println( value:Logical )                      [abstract]
    method println( value:Real64 )                       [abstract]
    method println( value:Real64, decimal_places:Int32 ) [abstract]
    method println( value:Object )                       [abstract]
    method println( value:String )                       [abstract]
    method set_indent( new_indent:Int )                  [abstract]

endClass

class BufferedPrintWriter<<$buffer>> : PrintWriter [abstract aspect]
  PROPERTIES
    $buffer = String()

  METHODS
    method close
      flush

    method flush
      flush( $buffer )

    method flush( buffer:String ) [abstract]

    method indent->Int
      return $buffer.indent

    method print( value:Byte )
      $buffer.print( value )

    method print( value:Character )
      $buffer.print( value )
      if (value == '\n') flush

    method print( value:Int )
      $buffer.print( value )

    method print( value:Int32 )
      $buffer.print( value )

    method print( value:Logical )
      $buffer.print( value )

    method print( value:Int64 )
      $buffer.print( value )

    method print( value:Real64, decimal_places:Int32 )
      $buffer.print( value, decimal_places )

    method print( value:Object )
      $buffer.print( value )

    method print( value:Real64 )
      $buffer.print( value )

    method print( value:String )
      $buffer.print( value )
      if ($buffer.count > 1024) flush

    method println
      $buffer.print( '\n' )
      flush

    method println( value:Byte )
      print( value )
      println

    method println( value:Character )
      print( value )
      println

    method println( value:Int )
      print( value )
      println

    method println( value:Int32 )
      print( value )
      println

    method println( value:Logical )
      print( value )
      println

    method println( value:Int64 )
      print( value )
      println

    method println( value:Real64 )
      print( value )
      println

    method println( value:Real64, decimal_places:Int32 )
      print( value, decimal_places )
      println

    method println( value:Object )
      print( value )
      println

    method println( value:String )
      print( value )
      println

    method set_indent( new_indent:Int )
      $buffer.indent = new_indent
endClass

class BufferedPrintWriter : BufferedPrintWriter<<buffer>>
  PROPERTIES
    output : Writer<<Byte>>

  METHODS
    method init( output )

    method close
      flush
      output.close

    method flush( buffer:String )
      output.write( buffer.data )
      local previous_indent = buffer.@indent
      local previous_at_newline = buffer.at_newline
      buffer.clear
      buffer.at_newline = previous_at_newline
      buffer.indent = previous_indent
      output.flush
endClass
