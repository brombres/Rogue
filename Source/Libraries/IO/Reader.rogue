class Reader<<$DataType>> [abstract aspect]
  PROPERTIES
    position : Int

  METHODS
    method close
      noAction

    method has_another->Logical [abstract]

    method peek->$DataType [abstract]

    method on_use->this
      return this

    method on_end_use
      close

    method position->Int
      return @position

    method read->$DataType [abstract]

    method read( buffer:$DataType[], limit:Int )->Int
      forEach (n in 0..<limit)
        if (not has_another) close; return n
        buffer.add( read )
      endForEach
      if (not has_another) close
      return limit

    method reset
      seek( 0 )

    method seek( pos:Int )
      local delta = pos - position
      if (delta >= 0) skip( delta )
      else            Global.error.println( "Unsupported operation $.seek(<backwards position>)"(type_name) )

    method skip( n:Int )
      forEach (1..n) read

    method to->String
      local buffer = $DataType[]
      while (has_another) buffer.add( read )
      return buffer->String

    method to->$DataType[]
      local result = $DataType[]
      result.add( forEach in this )
      return result
endClass

