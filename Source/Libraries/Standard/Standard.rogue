$include Standard/Codec/UTF16String
$include Standard/Core
$include Standard/Collection
$include Standard/Console
$include Standard/IO
$include Standard/Math

# RogueC auto-includes Variant and JSON if they are referenced during tokenization.

# This
#
#   ROGUE_NATIVE_POINTER_TYPE<< "%Ns%RogueInt32*", RogueInt32Pointer >>
#
# creates
#   - nativeType<<"%Ns%RogueInt32*">> RogueInt32Pointer
#   - With Rogue-side .exists and operator? methods.
ROGUE_NATIVE_POINTER_TYPE<< "%Ns%RogueReal*",      RogueRealPointer      >>
ROGUE_NATIVE_POINTER_TYPE<< "%Ns%RogueReal64*",    RogueReal64Pointer    >>
ROGUE_NATIVE_POINTER_TYPE<< "%Ns%RogueReal32*",    RogueReal32Pointer    >>
ROGUE_NATIVE_POINTER_TYPE<< "%Ns%RogueInt64*",     RogueInt64Pointer     >>
ROGUE_NATIVE_POINTER_TYPE<< "%Ns%RogueInt32*",     RogueInt32Pointer     >>
ROGUE_NATIVE_POINTER_TYPE<< "%Ns%RogueCharacter*", RogueCharacterPointer >>
ROGUE_NATIVE_POINTER_TYPE<< "%Ns%RogueWord*",      RogueWordPointer      >>
ROGUE_NATIVE_POINTER_TYPE<< "void*",               RogueVoidPointer      >>
ROGUE_NATIVE_POINTER_TYPE<< "const char*",         RogueConstCharPointer >>

routine recast_tuple<<$OldType,$NewType>>( tuple:$OldType )->$NewType
  # For internal use only - used by the compiler to cast between compatible tuple types.
  return native("*(($<<ReturnType>>*)&$tuple)")->$NewType
endRoutine

routine describe( value:Object )->String
  if (value) return value.description
  else       return "null"
endRoutine
