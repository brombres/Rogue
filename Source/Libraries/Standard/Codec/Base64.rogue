$include IO/BitIO

augment Byte[]
  METHODS
    method to_base64->String
      local base64_count = ((count+2) / 3) * 4
      local result = String( base64_count )
      local reader = BitReader( this )
      while (reader.has_another(6))
        result.print( reader.read(6).to_digit(&base64) )
      endWhile
      if (reader.buffer_count)
        local available_bits = reader.buffer_count
        result.print( (reader.read(available_bits) :<<: (6-available_bits)).to_digit(&base64) )
      endIf
      while ((result.count & 3) != 0) result.print('=')
      return result

endAugment

augment Character
  METHODS
    method to_base64_value->Int32
      if (this >= 'A' and this <= 'Z') return (this - 'A')
      if (this >= 'a' and this <= 'z') return 26 + (this - 'a')
      if (this >= '0' and this <= '9') return 52 + (this - '0')
      if (this == '+') return 62
      if (this == '/') return 63
      return 0
endAugment

augment String
  METHODS
    method decode_base64->Byte[]
      use base64 = StringPool
        base64.reserve( count+3 )
        base64.print( this )

        while ((base64.count & 3) != 0) base64.print( '=' )
        local remove_count = 0
        forEach (ch in base64 step -1)
          if (ch == '=') ++remove_count
          else           escapeForEach
        endForEach

        local output_count = (base64.count * 3) / 4

        local result = Byte[]( output_count )
        local writer = BitWriter( result )
        local iterator = base64.iterator
        while (iterator.has_another)
          loop (4)
            writer.write( iterator.read.to_base64_value, 6 )
          endLoop
        endWhile
        writer.flush

        loop (remove_count) result.remove_last
        return result
      endUse

endAugment
