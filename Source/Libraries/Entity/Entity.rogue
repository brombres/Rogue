library Entity

uses Collection/Node
uses Control
uses Geometry
uses Math/Quaternion

$include Entity/Entity2D
$include Entity/Entity3D
$include Entity/Attributes
$include Entity/EntityScript
$include Entity/Properties

class Entity : Node<<Entity>>
  GLOBAL PROPERTIES
    next_id = 1

  PROPERTIES
    name       : String
    id         : Int
    attributes : Attributes
    script     : EntityScript
    properties : Variant

  METHODS
    method init
      noAction

    method init( name )
      noAction

    method init_object
      id = next_id
      ++next_id

    method change_script( new_script:EntityScript )
      new_script.entity = this
      if (script) script.change_state( new_script )
      else        script = new_script
      new_script .= started

    method draw
      .begin_draw
      .dispatch_draw_bg
      .dispatch_draw
      .dispatch_draw_fg

    method draw_bg

    method draw_fg

    method on_draw
      noAction

    method on_draw_bg
      noAction

    method on_draw_fg
      noAction

    method on_start
      noAction

    method on_update
      noAction

    method on_update_layout
      noAction

    method properties->Properties
      return Properties( this )

    method start
      if (not attributes.started)
        attributes.started = true
        script = script?.started
        on_start
      endIf

    method to->String
      if (@name) return @name
      else       return type_name

    method update
      if (not attributes.started) start

      script = script?.updated
      on_update
      (forEach in children).update

    method update_layout
      if (not attributes.started) start

      script?.on_update_layout
      on_update_layout
      (forEach in children).update_layout

    method .begin_draw
      if (not attributes.started) start

    method .dispatch_draw
      on_draw

      script?.call<<on_draw>>

      if (count)
        (forEach in children).draw
      endIf

    method .dispatch_draw_bg
      script?.call<<on_draw_bg>>

      on_draw_bg

      draw_bg

    method .dispatch_draw_fg
      draw_fg

      on_draw_fg

      script?.call<<on_draw_bg>>
endClass
