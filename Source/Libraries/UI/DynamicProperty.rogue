library UI

$macro ENTITY_PROPERTY<<$EntityType,$name,$Type,$default_value,$PropertyType>>
  augment
    METHODS
      method $EntityType.$name->$Type
        return DynamicProperties.$name( this )

      method $EntityType.$id(has_,$name)->Logical
        return DynamicProperties.$id(has_,$name)( this )

      method $EntityType.$id(set_,$name)( value:$Type )
        DynamicProperties.$id(set_,$name)( this, value )

      method DynamicProperties.$name( entity:$EntityType )->$Type
        if (entity.properties) return entity.properties.$name
        else                   return $default_value

      method DynamicProperties.$id(has_,$name)( entity:$EntityType )->Logical
        if (entity.properties) return entity.properties.$id(has_,$name)
        else                   return false

      method DynamicProperties.$id(set_,$name)( entity:$EntityType, value:$Type )
        if (entity.properties) entity.properties.$id(set_,$name)( value )
        else                   entity.properties = $PropertyType( value )

      method DynamicProperty.$name->$Type
        if (next) return next.$name
        return $default_value

      method DynamicProperty.$id(has_,$name)->Logical
        if (next) return next.$id(has_,$name)
        else      return false

      method DynamicProperty.$id(set_,$name)( value:$Type )
        if (next) next.$id(set_,$name)( value )
        else      next = $PropertyType( value )
  endAugment

  class $PropertyType( value:$Type ) : DynamicProperty
    METHODS
      method $name->$Type
        return value

      method $id(has_,$name)->Logical
        return true

      method $id(set_,$name)( value )
  endClass
$endMacro

$macro PROPAGATED_ENTITY_PROPERTY<<$EntityType,$name,$Type,$default_value,$PropertyType,$m_parent>>
  augment
    METHODS
      method $EntityType.$name->$Type
        return DynamicProperties.$name( this )

      method $EntityType.$id(set_,$name)( value:$Type )
        DynamicProperties.$id(set_,$name)( this, value )

      method DynamicProperties.$name( entity:$EntityType )->$Type
        if (entity.properties)
          local result = entity.properties.$name
          if (result) return result.value
        endIf

        if local parent = entity.$m_parent
          return parent.$name
        else
          return $default_value
        endIf

      method DynamicProperties.$id(set_,$name)( entity:$EntityType, value:$Type )
        if (entity.properties) entity.properties.$id(set_,$name)( value )
        else                   entity.properties = $PropertyType( value )

      method DynamicProperty.$name->$Type?
        if (next) return next.$name
        return null

      method DynamicProperty.$id(set_,$name)( value:$Type )
        if (next) next.$id(set_,$name)( value )
        else      next = $PropertyType( value )
  endAugment

  class $PropertyType( value:$Type ) : DynamicProperty
    METHODS
      method $name->$Type?
        return value

      method $id(set_,$name)( value )
  endClass
$endMacro

$macro ENTITY_CALLBACK_PROPERTY<<$EntityType,$name,$FnType,$PropertyType>>
  augment
    METHODS
      method $EntityType.$name( callback:$FnType )
        DynamicProperties.$id(set_,$name)( this, callback )

      method DynamicProperties.$name( entity:$EntityType )
        if (entity.properties) entity.properties.$name(entity)

      method DynamicProperties.$id(set_,$name)( entity:$EntityType, fn:$FnType )
        if (entity.properties) entity.properties.$id(set_,$name)( fn )
        else                   entity.properties = $PropertyType( fn )

      method DynamicProperty.$name( entity:$EntityType )
        if (next) next.$name( entity )

      method DynamicProperty.$id(set_,$name)( fn:$FnType )
        if (next) next.$id(set_,$name)( fn )
        else      next = $PropertyType( fn )
  endAugment

  class $PropertyType( fn:$FnType ) : DynamicProperty
    METHODS
      method $name( entity:$EntityType )
        if (fn) fn( entity )

      method $id(set_,$name)( fn )
  endClass
$endMacro

class DynamicProperties [singleton]
  METHODS
endClass

class DynamicProperty
  PROPERTIES
    next : DynamicProperty

  METHODS
endClass

