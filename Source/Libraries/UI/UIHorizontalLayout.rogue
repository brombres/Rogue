library UI

class UIHorizontalLayout : UILayout
  METHODS
    method measure_content_width( subcomponents:UIComponent[] )->Int?
      local total_w = 0
      forEach (component in subcomponents)
        local w = component.measure_width( null )
        if (not w) return null
        total_w += w.value
      endForEach
      return total_w

    method measure_content_height( subcomponents:UIComponent[] )->Int?
      local max_h = 0
      forEach (component in subcomponents)
        local h = component.measure_height( null )
        if (not h) return null
        max_h .= or_larger( h.value )
      endForEach
      return max_h

    method update_subcomponent_widths( subcomponents:UIComponent[], container_width:Int )
      use subcomponent_widths = WorkList<<Int?>>
        local fixed_w = 0
        local flex_count = 0
        local flex_weight = 0.0
        forEach (component in subcomponents)
          local w = component.measure_width( null )
          subcomponent_widths.add( w )
          if (w)
            fixed_w += w.value
          else
            ++flex_count
            flex_weight += component.weight.x
          endIf
        endForEach

        local excess_w = Int( (container_width - fixed_w).clamped_low(0) )
        local remaining_w = excess_w
        forEach (component at i in subcomponents)
          local w = subcomponent_widths[i]
          local new_w : Int
          if (w)
            new_w = component.size.x
          else
            new_w = which{ flex_count==1:remaining_w || (excess_w*(component.weight.x/flex_weight))->Int }
            remaining_w -= new_w
            --flex_count
          endIf
          component.update_layout_width( new_w )
        endForEach
      endUse

    method update_subcomponent_placement( subcomponents:UIComponent[], container:IntBox ) [override]
      local cursor = container.position
      local h = container.size.y
      forEach (component in subcomponents)
        #Epilog.println "cursor:$"(cursor)
        component.update_layout_placement( IntBox(cursor, IntXY(component.size.x,h)) )
        cursor += component.size.xv
      endForEach
endClass

class UIGeneratedHorizontalLayout : UIHorizontalLayout
  # Special subclass for operator overrides
  METHODS
    method operator+( rhs:UIComponent )->UIComponent [override]
      add( rhs )
      return this
endClass
