library UI

class Border : Component
  PROPERTIES
    is_proportional              : Logical
    left, top, right, bottom     : Real
    .left, .top, .right, .bottom : Real

  METHODS
    method content_size_to_layout_size( content_size:XY )->XY
      return content_size + XY(.left+.right,.top+.bottom)

    method content_position->XY
      return XY(.left,.top)

    method content_size->XY
      return (size - XY(.left+.right,.top+.bottom)).clamped_low(XY(0,0))

    method fixed
      is_proportional = false

    method proportional
      is_proportional = true

    method resolve_layout_size( available_size:XY, &limited )->XY [override]
      if (is_proportional)
        .left = left * available_size.x
        .top = top * available_size.y
        .right = right * available_size.x
        .bottom = bottom * available_size.y
      else
        .left = left
        .top = top
        .right = right
        .bottom = bottom
      endIf
      return prior.resolve_layout_size( available_size, &=limited )

    method set_horizontal( horizontal_border_thickness:Real )
      left = horizontal_border_thickness
      right = horizontal_border_thickness

    method set_vertical( vertical_border_thickness:Real )
      top = vertical_border_thickness
      bottom = vertical_border_thickness

    method set_thickness( border_thickness:Real )
      left   = border_thickness
      right  = border_thickness
      top    = border_thickness
      bottom = border_thickness

endClass
