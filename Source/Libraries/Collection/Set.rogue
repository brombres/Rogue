$include Collection/Table

class Set<<$DataType>> : [$DataType:$DataType]
  METHODS
    method add( value:$DataType )
      this[value] = value

    method cloned->ThisType
      return Set<<$DataType>>( this )

    method difference( other:Set<<$DataType>> )
      remove( forEach in other.values )

    method intersection( other:Set<<$DataType>> )
      remove( forEach in ((this - other) | (other - this)) )

    method operator|( other:Set<<$DataType>> )->Set<<$DataType>>
      return cloned.[ union(other) ]

    method operator&( other:Set<<$DataType>> )->Set<<$DataType>>
      return cloned.[ intersection(other) ]

    method operator-( other:Set<<$DataType>> )->Set<<$DataType>>
      return cloned.[ difference(other) ]

    method print_to( buffer:PrintWriter )
      buffer.print( '{' )
      local cur = first_entry
      local i = 0
      while (cur)
        if (i > 0) buffer.print( ',' )
        buffer.print( cur.key )
        cur = cur.next_entry
        ++i
      endWhile
      buffer.print( '}' )

    method union( other:Set<<$DataType>> )
      add( forEach in other.values )

endClass
